// <auto-generated />
using System;
using GraphQlCodemaze.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQlCodemaze.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240127134031_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("GraphQlCodemaze.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f965f9cb-7295-49d0-9b46-8c665bf2afde"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("faa8eab9-07b7-42ab-bb24-ab180bf2eab7"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("2e3a40fa-a1c4-487f-8f98-8fe839b5f422"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("b0070586-6267-4c74-9030-8af851fd1df0"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("07547a50-b0ad-4e2c-8ca1-bb31d94e9386"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("b0070586-6267-4c74-9030-8af851fd1df0"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQlCodemaze.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("faa8eab9-07b7-42ab-bb24-ab180bf2eab7"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("b0070586-6267-4c74-9030-8af851fd1df0"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQlCodemaze.Entities.Account", b =>
                {
                    b.HasOne("GraphQlCodemaze.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GraphQlCodemaze.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
